// 边框圆滑
@mixin borderRadius($radius: 5px) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}
// 使用示例： .box { @include border-radius(); }

// 设置边框样式
@mixin setBorder($color: #ccc, $width: 1px) {
  border: {
    color: $color;
    width: $width;
    style: dashed;
  }
}
// 使用示例： p { @include set-border(blue, red); }

// 文本格式化，超出范围，显示省略号
@mixin textOverflow($width: 100%, $display: block) {
  width: $width;
  display: $display;
  white-space: nowrap;
  -ms-text-overflow: ellipsis;
  text-overflow: ellipsis;
  overflow: hidden;
}
// 使用示例： p { @include textOverflow();} 

/* 清除浮动 */
@mixin clearfix {
  &:after {
    clear: both;
    content: '.';
    display: block;
    height: 0;
    line-height: 0;
    overflow: hidden;
  }
  *height: 1%;
}

/*弹性盒子（传入null不设置该属性）*/
@mixin flexBox($direction: row, $justify: null, $align: null, $flex-wrap: null) {
  display: flex;
  @if ($direction != null) {
    flex-direction: $direction;
  }
  @if ($justify != null) {
    justify-content: $justify;
  }
  @if ($align != null) {
    align-items: $align;
  }
  @if ($flex-wrap != null) {
    flex-wrap: $flex-wrap;
  }
}

/*绝对定位  参数顺序：上右下左*/
@mixin positionAbsolute($top: null, $right: null, $bottom: null, $left: null) {
  position: absolute;
  @if ($left != "" and $left!=null) {
    left: $left;
  }
  @if ($right != "" and $right!=null) {
    right: $right;
  }
  @if ($top != "" and $top!=null) {
    top: $top;
  }
  @if ($bottom != "" and $bottom != null) {
    bottom: $bottom;
  }
}

/*左浮动*/
@mixin floatLeft($width: 19%, $margin-right: 1.2%) {
  width: $width;
  float: left;
  @if ($margin-right != null) {
    margin-right: $margin-right;
  }
}
 
/*右浮动*/
@mixin floatRight($width: 19%, $margin-left: 1.2%) {
  width: $width;
  float: right;
  @if ($margin-left != null) {
    margin-left: $margin-left;
  }
}

/* 行高 */
@mixin lineHeight($height: 30px, $line-height: 30px) {
  @if ($height != null) {
    height: $height;
  }
  @if ($line-height != null) {
    line-height: $line-height;
  }
}

/* 文本阴影 */
@mixin textShadow($h-shadow: 0px, $v-shadow: 0px, $blur: 10px, $color:rgba(0,180,255,0.7)) {
  text-shadow: $h-shadow $v-shadow $blur $color;
}

.flex-row-start {
  @include flexBox(row, flex-start, center);
}

.flex-row-between {
  @include flexBox(row, space-between, center);
}

.flex-row-end {
  @include flexBox(row, flex-end, center);
}

.flex-row-center {
  @include flexBox(row, center, center);
}